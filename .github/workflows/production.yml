name: Production

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      contents: write # permission to create a github release
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "main"
      - uses: release-drafter/release-drafter@v5
        with:
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-report:
    name: Test Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GA_PAT }}

      # Note: using dawid66's download artifact
      # (default download-artifact action does not allow dl from other workflow)
      - name: Download coverage from jest shards
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: dev-cicd.yml
          name: coverage-artifacts
          path: coverage

      - name: Merge Code Coverage
        run: npx nyc merge coverage/ merged-output/merged-coverage.json

      - name: Generate coverage report
        run: npx nyc report -t merged-output --report-dir merged-output --reporter lcov

      - name: Upload coverage to codeclimate
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{github.workspace}}/merged-output/lcov.info:lcov

  chromatic:
    name: Publish Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GA_PAT }}
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Check if should build storybook
        id: check-should-build
        run: echo "should_build=$(node tools/scripts/should-build-storybook.js)" >> $GITHUB_OUTPUT
      - name: Echo check results
        run: echo "should_build = ${{ steps.check-should-build.outputs.should_build }}"
      - name: Build storybook
        if: steps.check-should-build.outputs.should_build == 'true'
        run: pnpm nx build-storybook web
      - name: Publish to Chromatic
        if: steps.check-should-build.outputs.should_build == 'true'
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: dist/storybook/web
          autoAcceptChanges: true # (checks happen in PR, main branch means already accepted)
      - name: Skip Chromatic
        if: steps.check-should-build.outputs.should_build != 'true'
        uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          storybookBuildDir: dist/storybook/web
          autoAcceptChanges: true
          skip: true
